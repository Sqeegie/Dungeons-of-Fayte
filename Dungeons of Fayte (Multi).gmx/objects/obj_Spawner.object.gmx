<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Spawner</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Trap</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    monsterObj = obj_Null;
    
    deadCount = 0;

    numSpawns = 0;
    
    canSpawn = 0;
    
    canInc = 1;
    
    switch(numPlayers)
    {
        case 1:
            spawnInterval = 120;
            spawnCap = 2;
            break;
        case 2:
            spawnInterval = 60;
            spawnCap = 2;
            break;
        case 3:
            spawnInterval = 60;
            spawnCap = 3;
        case 4:
            spawnInterval = 30;
            spawnCap = 3;
            break;
    }
    
    alarm[0] = 2;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(instance_exists(owner) &amp;&amp; canInc == 1)
    {
        owner.deadCount += 1;
    }

}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(canSpawn == 0)
    {
        canSpawn = 1;
        alarm[0] = 2;
    }
    else
    {
        canSpawn = 0;
        alarm[0] = spawnInterval;
    }



}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(pause == 0)
    {
        if(collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_Solid,true,true) &lt;= 0 &amp;&amp; numSpawns &lt; spawnCap &amp;&amp; canSpawn == 1)
        {
            if(numPlayers &gt; 1)
            {
                //image_blend = c_green;
                var newobj;
                newobj = instance_create(x,y,monsterObj);
                
                newobj.owner = id;
                
                numSpawns +=1;
            
                instance_create(x,y,obj_Poof);
                
                if(newobj.boss == 1)
                {
                    newobj.currentHealth = newobj.currentHealth + ((newobj.currentHealth/2)*(numPlayers-1));
                    numSpawns = 1;
                    spawnCap = 1;
                }
            }
            else
            {
                if(numSpawns == 0 || deadCount == 1)
                {
                    //image_blend = c_green;
                    var newobj;
                    newobj = instance_create(x,y,monsterObj);
                    
                    newobj.owner = id;
                    
                    numSpawns +=1;
                
                    instance_create(x,y,obj_Poof);
                    
                    if(newobj.boss == 1)
                    {
                        newobj.currentHealth = newobj.currentHealth + ((newobj.currentHealth/2)*(numPlayers-1));
                        numSpawns = 1;
                        spawnCap = 1;
                    }
                }
            }
        
        }
    
    
        if(numSpawns &gt;= spawnCap &amp;&amp; deadCount &gt;= numSpawns)
        {
            instance_destroy();
        }
    }


    if(instance_exists(obj_P1) &lt;= 0 &amp;&amp; instance_exists(obj_P2) &lt;=0 &amp;&amp; instance_exists(obj_P3) &lt;=0 &amp;&amp; instance_exists(obj_P4) &lt;= 0)
    {
        canInc = 0;
        instance_destroy();
    
    }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
