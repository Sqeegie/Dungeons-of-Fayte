<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Solid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    xoffset = 0;
    yoffset = 0;
    
    doDraw = 0;

    Month1Text = '';
    Month2Text = '';
    Month3Text = '';
    Month4Text = '';
    image_speed = 0.25;
    flip = 0;
    alarm[0] = 8;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(flip == 1)
    {
        flip = 0;
        alarm[0] = 8;
    }
    else
    {
        flip = 1;
        alarm[0] = 4;
    }
    



}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    var collideo;
    
    collideo = collision_circle(x+4,y+4,8,obj_Player,true,true)

    if(collideo &gt; 0 &amp;&amp; pause == 0)
    {
        if(collideo.inLocation == 0)
        {
            doDraw = 1;
        }
        else
        {
            doDraw = 0;
        }
    
    }
    else
    {
        doDraw = 0;
    }



}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    draw_set_color(16777215);
    draw_set_font(fnt_Terminal4);
    draw_set_halign(fa_center);
    
    if(instance_exists(obj_StoreBack) &lt;= 0)
    {
        if(doDraw == 1)
        {
            if(flip == 1)
            {
                draw_sprite(sprite_index,-1,x,y);
            }
            else
            {
                draw_sprite(sprite_index,-1,x,y+1);
            }
        }
        else
        {
            draw_sprite(sprite_index,-1,x,y);
        }
    }
    
    
    if(doDraw == 1 &amp;&amp; instance_exists(obj_StoreBack) &lt;= 0)
    {
        draw_sprite(spr_MiniTextWide,-1,x+xoffset,y+yoffset);
        
        switch(Week)
        {
            case 0:
            case 1:
            case 2:
            case 3:
                draw_text(x+xoffset+26,y+yoffset+4,string_upper(Month1Text));
                break;
            case 4:
            case 5:
            case 6:
            case 7:
                draw_text(x+xoffset+24,y+yoffset+4,string_upper(Month2Text));
                break;
            case 8:
            case 9:
            case 10:
            case 11:
                draw_text(x+xoffset+24,y+yoffset+4,string_upper(Month3Text));
                break;
            case 12:
            case 13:
            case 14:
            case 15:
                draw_text(x+xoffset+24,y+yoffset+4,string_upper(Month4Text));
                break;
        
        }
    
    }



}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
