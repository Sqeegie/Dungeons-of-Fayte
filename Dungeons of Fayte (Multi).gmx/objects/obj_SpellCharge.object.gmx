<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ChargeEffect</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>49</depth>
  <persistent>0</persistent>
  <parentName>obj_Ability</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    owner = obj_Null;
    flip = 0;

}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    switch(image_blend)
    {
        case c_orange:
            image_blend = c_red;
            break;
        case c_red:
            image_blend = c_orange;
            break;
        case c_white:
            image_blend = c_black;
            break;
        case c_black:
            image_blend = c_white;
            break;
        case c_aqua:
            image_blend = c_blue;
            break;
        case c_blue:
            image_blend = c_aqua;
            break;
        case c_teal:
            image_blend = c_silver;
            break;
        case c_silver:
            image_blend = c_teal;
            break;
    }

    alarm[0] = 5;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(instance_exists(owner))
    {
        if(owner.charging == 1)
        {
            switch(owner.sprite_index)
            {
                /*
                case owner.standR:
                case owner.walkR:
                case owner.attR:
                    x = owner.x+4;
                    y = owner.y;
                    depth = 40;
                    break;
                case owner.standU:
                case owner.walkU:
                case owner.attU:
                    x = owner.x
                    y = owner.y-4;
                    depth = 60;
                    break;
                case owner.standL:
                case owner.walkL:
                case owner.attL:
                    x = owner.x-4;
                    y = owner.y;
                    depth = 40;
                    break;
                case owner.standD:
                case owner.walkD:
                case owner.attD:
                    x = owner.x;
                    y = owner.y+4;
                    depth = 40;
                    break;
                    */
                // Temp case, remove once fixed above issue
                case 1:
                break;
            }
            
            if(GetStat('class',owner.objMap) == Necromancer)
            {
                if(collision_rectangle(owner.bbox_left,owner.bbox_top,owner.bbox_right,owner.bbox_bottom,obj_Corpse,false,false) &gt; 0)
                {
                    if(owner.chargeAmount &lt; chargeC)
                    {
                        image_blend = c_white;
                    }
                    if(owner.chargeAmount &gt;= chargeC &amp;&amp; flip == 0)
                    {
                        flip = 1;
                        image_blend = c_black;
                        alarm[0] = 5;
                    }
                
                }
                else
                {
                    if(owner.chargeAmount &lt; chargeC)
                    {
                        image_blend = c_aqua;
                    }
                    if(owner.chargeAmount &gt;= chargeC &amp;&amp; flip == 0)
                    {
                        flip = 1;
                        image_blend = c_blue;
                        alarm[0] = 5;
                    }
                }
            
            }
            else
            {
                if(GetStat('class',owner.objMap) == Wizard)
                {
                    if(owner.chargeAmount &lt; chargeC)
                    {
                        image_blend = c_aqua;
                    }
                    if(owner.chargeAmount &gt;= chargeC &amp;&amp; flip == 0)
                    {
                        flip = 1;
                        image_blend = c_teal;
                        alarm[0] = 5;
                    }
                }
                else
                {
            
                    if(owner.chargeAmount &lt; chargeC)
                    {
                        image_blend = c_orange;
                    }
                    if(owner.chargeAmount &gt;= chargeC &amp;&amp; flip == 0)
                    {
                        flip = 1;
                        image_blend = c_red;
                        alarm[0] = 5;
                    }
                }
            
            }
        }
        else
        {
            instance_destroy();
        }
    }
    else
    {
        instance_destroy();
    }

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
