<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_InvisiShoot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>30</depth>
  <persistent>0</persistent>
  <parentName>obj_Projectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    paramSet = 0;
    sound_play(snd_SpellAttack);

}</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    ds_list_destroy(myHits);



}</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(instance_exists(owner))
    {
        var theweapon, effectobj,newobj;
            
        if(magic == 0)
        {
            theweapon = GetStat('weapon',owner.objMap);
            effectobj = ds_map_find_value(theweapon,'hitEffect');
            
            if(object_index == obj_Arrow)
            {
                if(GetStat('class',owner.objMap) == Spayceman)
                {
                    effectobj = obj_FireHit;
                }
            
            }
        }
        else
        {
            effectobj = ds_map_find_value(objMap,'hitEffect');

        }
        
        /*effectobj = obj_RedHit;
        
        newobj = instance_create(x,y,effectobj);
        newobj.image_xscale = image_xscale;
        newobj.image_yscale = image_yscale;
        newobj.image_blend = c_black;*/
    }

}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(paramSet == 0)
    {
        if(instance_exists(owner))
        {
            var theweapon;
            paramSet = 1;
            
            theweapon = GetStat('weapon',owner.objMap);
            
            weaponpower = ds_map_find_value(theweapon,'weaponPower');
            force = ds_map_find_value(theweapon,'force');
            
            alarm[0] = ds_map_find_value(theweapon,'attackSpeed');
            attackpower = ((GetStat('strength',owner.objMap))/3) + weaponpower;
            
            if(GetStat('class',owner.objMap) == Spayceman)
            {
                sprite_index = spr_Laser;
                sound_play(snd_Laser);
            
            }
            
            speed = 7;
            direction = image_angle;
        }
        else
        {
            instance_destroy();
        }
    }
    
}</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="obj_Solid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(ds_list_find_index(myHits,other.id) == -1 &amp;&amp; pause == 0 &amp;&amp; other.id != owner &amp;&amp; instance_exists(owner) &amp;&amp; other.rolling == 0)
    {
        ds_list_add(myHits,other.id);
        
        if(ds_map_exists(owner.objMap,'player'))
        {
            //obj_Log.myLog = 'Hit'+string(other.x);
            switch(other.enemy)
            {
                case -1:
                    instance_destroy();
                    newobj = instance_create(x,y,obj_RedHit);
                    newobj.image_xscale = image_xscale;
                    newobj.image_yscale = image_yscale;
                    newobj.image_blend = c_black;
                    break;
                case 0:
                    //if(penetrate == 0)
                    //{
                    //    instance_destroy();
                    //}
                    break;
                case 1:
                    if(other.boss == 1)
                    {
                        DamageOther();
                        newobj = instance_create(x,y,obj_RedHit);
                        newobj.image_xscale = image_xscale;
                        newobj.image_yscale = image_yscale;
                        newobj.image_blend = c_black;
                    }
                    else
                    {
                        var newobj;
                        other.currentHealth = 0;
                        other.dragged = 1;
                        newobj = instance_create(other.x,other.y,obj_DragCorpse);
                        newobj.sprite_index = other.sprite_index;
                    }

                    if(penetrate == 0)
                    {
                        instance_destroy();
                    }
                    break;
            }
        
        }
        else
        {
            switch(other.enemy)
            {
                case -1:
                    instance_destroy();
                    break;
                case 0:
                    DamageOther();
                    if(shocking == 1)
                    {
                        ShockOther(other.id);
                    }
                    if(penetrate == 0)
                    {
                        instance_destroy();
                    }
                    break;
                case 1:
                    //if(penetrate == 0)
                    //{
                    //    instance_destroy();
                    //}
                    break;
            }
        }
    }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
