<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_LichKWalkR</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>obj_Enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    objMap = LichK;
    alarm[6] = 30;
    canSuper = 0;
    
    deadCount = 0;
}</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    currentHealth = currentHealth + (numPlayers-1)*(GetStat('life',objMap)*0.5)

    maxHealth = currentHealth;
    
    stage = 1;
    
    bossPause = 0;
    
    lootDrop = 0;
    
    boss = 1;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    obj_BossIntro.stage = 6;
    obj_BossIntro.currentLevel = 1;
    //sound_stop(mus_FinalBoss);
    SS_StopSound(global.sound_handle);
    
    instance_create(x,y,obj_DeadLichK);
    pause = 1;
    
    BossProgress('BoneLord');

    KillBoss = 1;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    canMove = 1;
    
    sprite_index = standD;
    
    specAttack = obj_TripleRedSkull;
    AttackStart();



}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    canMove = 1;
    
    sprite_index = standD;
    
    specAttack = obj_PBAoE;
    AttackStart();



}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    var newobj;
    newobj = instance_create(96,24,obj_Spawner);
    newobj.monsterObj = obj_Skeleton;
    newobj.owner = id;
        
    newobj = instance_create(96,64,obj_Spawner);
    newobj.monsterObj = obj_Skeleton;
    newobj.owner = id;



}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    canSuper = 1;
    
    alarm[6] = 200+random(50);



}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    forcex = 0;
    forcey = 0;

    if(currentHealth &lt; maxHealth*0.66 &amp;&amp; stage == 1 &amp;&amp; bossPause == 0)
    {
        bossPause = 1;
        instance_create(x,y,obj_Poof);
        x = 264;
        y = 240;
        
        var newobj;
        newobj = instance_create(24,24,obj_Spawner);
        newobj.monsterObj = obj_Skeleton;
        newobj.owner = id;
        
        newobj = instance_create(96,24,obj_Spawner);
        newobj.monsterObj = obj_Skeleton;
        newobj.owner = id;
        
        newobj = instance_create(64,72,obj_Spawner);
        newobj.monsterObj = obj_Skeleton;
        newobj.owner = id;
    }
    
    if(stage == 1 &amp;&amp; bossPause == 1)
    {
        if(deadCount &gt;= 3)
        {
            deadCount = 0;
            stage = 2;
            bossPause = 0;
            x = 112;
            y = 48;
            sprite_index = standL;
            ds_map_replace(LichK,'weapon',W_LichLaser);
        }
    }
    
    
    
    if(currentHealth &lt; maxHealth*0.33 &amp;&amp; stage == 2 &amp;&amp; bossPause == 0)
    {
        bossPause = 1;
        instance_create(x,y,obj_Poof);
        x = 264;
        y = 240;
    
        var newobj;
        newobj = instance_create(24,24,obj_Spawner);
        newobj.monsterObj = obj_SkelWarrior;
        newobj.owner = id;
        
        newobj = instance_create(24,72,obj_Spawner);
        newobj.monsterObj = obj_Wraith;
        newobj.owner = id;
        
    }
    
    if(stage == 2 &amp;&amp; bossPause == 1)
    {
        if(deadCount &gt;= 2)
        {
            deadCount = 0;
            stage = 3;
            bossPause = 0;
            x = 16;
            y = 40;
            sprite_index = standR;
            alarm[8] = 60;
        }
    }
    
    if(stage == 3)
    {
        if(deadCount &gt;= 2)
        {
            deadCount = 0;
            alarm[8] = 60;
        }
    }

}</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>bossPause</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{


    if(canMove == 1 &amp;&amp; pause == 0)
    {
        if(reAttack == 1)
        {
            if(canSuper == 1)
            {
                var rando;
                
                if(stage == 1)
                {
                    rando = choose(1,2,3);
                }
                if(stage == 2)
                {
                    rando = choose(1,2,3);//,4,5,6);
                }
                if(stage == 3)
                {
                    rando = choose(1,2,3);//,4,5,6,7,8,9,10);
                }
                
                switch(rando)
                {
                    case 1:
                    case 2:
                        if(collision_circle(x,y,22,obj_Player,true,true) &gt; 0)
                        {
                            sprite_index = spec;
                            alarm[9] = 15;
                            canMove = 0;
                            canSuper = 0;
                            exit;
                        }
                    case 3:
                        instance_create(x+5,y-4,obj_LichSkullEff);
                        sprite_index = spec;
                        alarm[10] = 30;
                        canMove = 0;
                        canSuper = 0;
                        exit;
                        
                }
            
            }
            else
            {
                var check;
                check = CheckMeleeRange();
                
                switch(check)
                {
                        case 0:
                            //MoveToTarget();
                            //EnemyWalkSprite();
                            switch(stage)
                            {
                                case 1:
                                    sprite_index = standD;
                                    break;
                                case 2:
                                    sprite_index = standL;
                                    break;
                                case 3:
                                    sprite_index = standR;
                                    break;
                            }
                            AttackStart();
                            break;
                        case 1:
                            sprite_index = standR;
                            AttackStart();
                            break;
                        case 2:
                            sprite_index = standU;
                            AttackStart();
                            break;
                        case 3:
                            sprite_index = standL;
                            AttackStart();
                            break;
                        case 4:
                            sprite_index = standD;
                            AttackStart();
                            break;
                }
            }
        }
        else
        {
            //MoveToTarget();
            //EnemyWalkSprite();
        }
        
    }

}</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
